# $1, $2, ... - elements of the list
# $VLIST_NONSELECTABLE_ELEMENTS - array of indexes (1-based) that cannot be selected
# $REPLY is the output variable - contains index (1-based) or -1 when no selection
#
# Copy this file into /usr/share/zsh/[-version-]/functions
# and add 'autoload v-list` to .zshrc
#
# This function outputs a list of elements that can be
# navigated with keyboard. Uses curses library

emulate -L zsh

zmodload zsh/curses

setopt localoptions
setopt typesetsilent
setopt localtraps
trap "return" TERM INT QUIT
trap "_vlist_exit" EXIT

# Drawing and input
autoload v-list-draw v-list-input

# Cleanup before any exit
_vlist_exit() {
    zcurses 2>/dev/null delwin inner
    zcurses 2>/dev/null delwin main
    zcurses 2>/dev/null refresh
    zcurses end
}

# Outputs a message in the bottom of the screen
_vlist_status_msg() {
    # -1 for border, -1 for 0-based indexing
    zcurses move main $(( term_height - 1 - 1 )) 2
    zcurses string main "                                 "
    zcurses move main $(( term_height - 1 - 1 )) 2
    zcurses string main "$1"
}

#
# Main code
#

# Check if there is proper input
if [ "$#" -lt 1 ]; then
    echo "Usage: v-list element_1 ..."
    return 1
fi

integer term_height="$LINES"
integer term_width="$COLUMNS"
if [[ "$term_height" -lt 1 || "$term_width" -lt 1 ]]; then
    local stty_out=$( stty size )
    term_height="${stty_out% *}"
    term_width="${stty_out#* }"
fi
integer inner_height=term_height-3
integer inner_width=term_width-2
integer page_height=inner_height
integer page_width=inner_width

integer last_element="$#"
local action
local final_key
integer selection

typeset -g REPLY
REPLY=-1

# Ability to remember the list between calls
if [[ -z "$VLIST_REMEMBER_STATE" || "$VLIST_REMEMBER_STATE" -eq 0 ]]; then
    VLIST_FROM_WHAT_IDX_LIST_IS_SHOWN=1
    VLIST_CURRENT_IDX_OF_THE_LIST=1
fi

zcurses init
zcurses addwin main "$term_height" "$term_width" 0 0
zcurses addwin inner "$inner_height" "$inner_width" 1 1

#
# Listening for input
#

local key keypad mouse

# Clear input buffer
zcurses timeout main 0
zcurses input main key keypad mouse
zcurses timeout main -1
key=""
keypad=""
mouse=""

while (( 1 )); do
    # Output the list
    v-list-draw "$VLIST_CURRENT_IDX_OF_THE_LIST" "$VLIST_FROM_WHAT_IDX_LIST_IS_SHOWN" "$page_height" "$page_width" 0 1 inner "$@"

    zcurses border main
    _vlist_status_msg "Current #$VLIST_CURRENT_IDX_OF_THE_LIST (of #$last_element entries)"
    zcurses refresh main inner

    # Wait for input
    zcurses input main key keypad mouse

    # Get the special (i.e. "keypad") key or regular key
    if [ ! -z "$key" ]; then
        final_key="$key" 
    elif [ ! -z "$keypad" ]; then
        final_key="$keypad"
    else
        _vlist_status_msg "Inproper input detected"
        zcurses refresh main inner
    fi

    v-list-input "$VLIST_FROM_WHAT_IDX_LIST_IS_SHOWN" "$VLIST_CURRENT_IDX_OF_THE_LIST" "$last_element" "$final_key"

    selection="$reply[1]"
    action="$reply[2]"
    VLIST_CURRENT_IDX_OF_THE_LIST="$reply[3]"
    VLIST_FROM_WHAT_IDX_LIST_IS_SHOWN="$reply[4]"

    if [ "$action" = "SELECT" ]; then
        REPLY="$selection"
        break
    elif [ "$action" = "QUIT" ]; then
        break
    fi
done

# vim: set filetype=zsh:
