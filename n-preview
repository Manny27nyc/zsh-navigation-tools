# Copy this file into /usr/share/zsh/[-version-]/functions
# and add 'autoload v-preview` to .zshrc

emulate -L zsh

zmodload zsh/curses

setopt localoptions
setopt typesetsilent
setopt localtraps
trap "return" TERM INT QUIT
trap "_vpreview_exit" EXIT

# Drawing and input
autoload n-list-draw n-list-input

# Cleanup before any exit
_vpreview_exit() {
    zcurses 2>/dev/null delwin files
    zcurses 2>/dev/null delwin body 
    zcurses 2>/dev/null delwin status
    zcurses 2>/dev/null refresh
    zcurses end
}

# Outputs a message in the bottom of the screen
_vpreview_status_msg() {
    # -1 for border, -1 for 0-based indexing
    zcurses move status 1 2
    zcurses string status "                                 "
    zcurses move status 1 2
    zcurses string status "$1"
}

#
# Main code
#

integer term_height="$LINES"
integer term_width="$COLUMNS"
if [[ "$term_height" -lt 1 || "$term_width" -lt 1 ]]; then
    local stty_out=$( stty size )
    term_height="${stty_out% *}"
    term_width="${stty_out#* }"
fi

integer status_height=3
integer status_width=term_width
integer status_page_height=1
integer status_page_width=term_width-2

integer files_height=term_height-status_height
integer files_width=term_width/4
integer files_page_height=files_height-2
integer files_page_width=files_width-2

integer body_height=term_height-status_height
integer body_width=term_width-files_width
integer body_page_height=body_height-2
integer body_page_width=body_width-2

integer _from_what_idx_list_is_shown_1=1
integer current_1=1

integer _from_what_idx_list_is_shown_2=1
integer current_2=1

integer active_window=1

zcurses init
zcurses addwin status "$status_height" "$status_width" $(( term_height - status_height )) 0
zcurses addwin files "$files_height" "$files_width" 0 0
zcurses addwin body "$body_height" "$body_width" 0 "$files_width"

#
# Listening for input
#

local key keypad mouse

# Clear input buffer
zcurses timeout status 0
zcurses input status key keypad mouse
zcurses timeout status -1
key=""
keypad=""
mouse=""

typeset -a filenames
integer last_element_1

typeset -a body
integer last_element_2

filenames=( `ls -1` )
integer last_element_1="$#filenames"
integer last_element_2=0

while (( 1 )); do
    # Output the lists
    n-list-draw "$current_1" "$_from_what_idx_list_is_shown_1" \
                    "$files_page_height" "$files_page_width" 1 2 files "$filenames[@]"

    if [ "$#body" -gt 1 ]; then
        n-list-draw "$current_2" "$_from_what_idx_list_is_shown_2" \
                        "$body_page_height" "$body_page_width" 1 2 body "$body[@]"
    fi

    zcurses border files
    zcurses border body
    zcurses border status

    zcurses refresh files body status 

    # Wait for input
    zcurses input status key keypad mouse

    # Get the special (i.e. "keypad") key or regular key
    if [ ! -z "$key" ]; then
        final_key="$key" 
    elif [ ! -z "$keypad" ]; then
        final_key="$keypad"
    else
        _vpreview_status_msg "Inproper input detected"
        zcurses refresh status 
    fi

    if [ "$active_window" -eq 1 ]; then
        zcurses clear files
        n-list-input "$current_1" "$_from_what_idx_list_is_shown_1" "$files_page_height" \
            "$files_page_width" "$last_element_1" "$final_key"

        selection="$reply[1]"
        action="$reply[2]"
        current_1="$reply[3]"
        _from_what_idx_list_is_shown_1="$reply[4]"

        if [ "$action" = "SELECT" ]; then
            # Load new file and refresh the displaying window
            filename="$filenames[$selection]"
            body=( "${(@f)"$(<$filename)"}" )
            last_element_2="$#body"
            current_2=1
            _from_what_idx_list_is_shown_2=1
            zcurses clear body
        elif [ "$action" = "QUIT" ]; then
            break
        elif [ "$action" = "LEAVE" ]; then
            active_window=2
        fi
    elif [ "$active_window" -eq 2 ]; then
        zcurses clear body
        n-list-input "$current_2" "$_from_what_idx_list_is_shown_2" "$body_page_height" \
            "$body_page_width" "$last_element_2" "$final_key"

        selection="$reply[1]"
        action="$reply[2]"
        current_2="$reply[3]"
        _from_what_idx_list_is_shown_2="$reply[4]"

        if [ "$action" = "QUIT" ]; then
            break
        elif [ "$action" = "LEAVE" ]; then
            active_window=1
        fi
    fi
done

# vim: set filetype=zsh:
