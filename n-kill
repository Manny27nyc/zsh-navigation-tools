# Copy this file into /usr/share/zsh/[-version-]/functions
# and add 'autoload v-kill` to .zshrc
#
# This function allows to choose a process and a signal to send to it
#
# Uses n-list

emulate -L zsh

zmodload zsh/curses

setopt localoptions
setopt extendedglob

local IFS="
"

typeset -A signals
signals=(
     1       "1  - HUP"
     2       "2  - INT"
     3       "3  - QUIT"
     6       "6  - ABRT"
     9       "9  - KILL"
     14      "14 - ALRM"
     15      "15 - TERM"
     17      "17 - STOP"
     19      "19 - CONT"
)

local list
local selected
local signal
local -a signal_names
local title

VLIST_REMEMBER_STATE=0

typeset -a VLIST_NONSELECTABLE_ELEMENTS
VLIST_NONSELECTABLE_ELEMENTS=( 1 )

# Ask of PID
list=( `ps -A` )
title="${list[1]}"
shift list
list=( "$title" "${(@M)list:#*$1*}" )

if [ "$#list" -eq 1 ]; then
    echo "No matching processes"
    return 1
fi

n-list "$list[@]"

# Got answer? (could be Ctrl-C or 'q')
if [ "$REPLY" -gt 0 ]; then
    selected="$list[$REPLY]"
    selected="${selected## #}"
    pid="${selected%% *}"

    # Now ask of signal
    signal_names=( ${(vin)signals} )
    n-list "Select signal:" "$signal_names[@]"

    if [ "$REPLY" -gt 0 ]; then
        # "Select signal:" nonselectable entry was
        # added so now substract 1 from returned index
        # Not relying on any typeset -i for output
        # variable, thus the (( ))
        (( REPLY -- ))
        selected="$signal_names[$REPLY]"
        signal="${(k)signals[(r)$selected]}"

        # Will change so that the command actually
        # executes when function is more tested
        print -zr "kill -$signal $pid"
    fi
fi

# vim: set filetype=zsh:
